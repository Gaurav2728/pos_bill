<?php
error_reporting(1);
foreach($_REQUEST as $key => $value){
	
	$_REQUEST[$key] = addslashes($value);
}


class DBConnect{
	
	var $pw ='';
	var $ErrorMessage;

	//function DBConnect($host= 'tradingdb.canajeafzqcb.us-west-2.rds.amazonaws.com',$user="admin", $password="admin123#", $database='tradingapp')
    
	// function DBConnect($host= '192.168.1.203',$user="root1", $password="root1", $database='tradingapp')

	//  function DBConnect($host= 'tradingdb.canajeafzqcb.us-west-2.rds.amazonaws.com',$user="admin", $password="admin123#", $database='tradingapp')
	
    // function DBConnect($host ='localhost',$user="root", $password="", $database='menu')
    function DBConnect($host ='localhost',$user="myseasio_loyalty", $password="e{ghCArgFF%Q", $database='myseasio_loyalty'){
        $this->host = $host;
        $this->user = $user;
        $this->password = $password;
        $this->database = $database;
		$this->conn= mysqli_connect($this->host,$this->user,$this->password,$database) or die("Could not connect to MySql");
		/*********Actives database for current use*****************/
		mysqli_select_db($this->conn,$this->database) or die("Could not Select Database");
	}
	
	function GetTableData($table,$fields,$condition='',$join=''){
		if($condition=="")
		{
		$query = "SELECT $fields FROM $table";
		}
		elseif($join=="")
		{
			$query = "SELECT $fields FROM $table where $condition";
		}
		else
		{
		$query = "SELECT $fields FROM $table $join where $condition";
		}
	  //echo $query;
		$norows = $this->NumRows($query);
		if($norows > 0)
		{
			return $mySqlResult = $this->SelectAll($query);
		 //print_r($mySqlResult);
		}
		else
		{ $novalue = array();
		   $novalue[0]=0;
			return $novalue;
		}
   }


	function GetTableData1($table,$fields,$condition='',$join='')
	{
		if($condition=="")
		{
		$query = "SELECT $fields FROM $table";
		}
		elseif($join=="")
		{
			$query = "SELECT $fields FROM $table where $condition";
		}
		else
		{
		$query = "SELECT $fields FROM $table $join where $condition";
			
		}
		
	 //echo $query;
		$norows = $this->NumRows($query);
		if($norows > 0)
		{
			return $mySqlResult = $this->SelectAll($query);
		 //print_r($mySqlResult);
		}
		else
		{
			return '0';
		}

	}

	function GetData( $query )
	{

		//echo $query;
		$norows = $this->NumRows($query);
		if($norows > 0)
		{
			return $mySqlResult = $this->SelectAll($query);
		 //print_r($mySqlResult);
		}
		else
		{
			 return array();
		}
	}
	
	

   /************************   update the data **********************************************/
   function UpdateData($table,$fields,$condition='',$join=''){
		if($condition=="")
		{
		$query = "UPDATE  $table SET  $fields ";
		}
		elseif($join=="")
		{
			$query = "UPDATE $table SET  $fields where $condition";
		}
		else
		{
			$query = "UPDATE $table SET  $fields $join where $condition";
		}
	   
	   //echo $query;
		 $flag = $this->Insert($query);
		if($flag )
		{

			return '1';
		}
		else
		{
			return  '0';
		}
	}


	   /************************  Delete the data **********************************************/
   function deleteData($table ,$condition=''){
		if($condition=="")
		{
		$query = "DELETE FROM $table  ";
		}
		elseif($join=="")
		{
			$query = "DELETE FROM $table WHERE  $condition";
		}
	 //echo $query;
	   $this->Insert($query);
		 $flag = $this->AffectedRows();
		if($flag )
		{
		 return 1;
		}
		else
		{
			return 0;
		}
	}
	
	
	
	
	   /************************  Delete the data ***********************************************/
	   
	   
	function deleteData1($query){
	 //echo $query;
	   $this->Insert($query);
		 $flag = $this->AffectedRows();
		if($flag )
		{
		 return 1;
		}
		else
		{
			return 0;
		}
   }
	
      /************************* Add the data **********************************************/
   function  AddData($table,$fields,$condition='',$join='')
	{
		if($condition=="")
		{
		$query = "UPDATE  $fields SET   $table";
		}
		elseif($join=="")
		{
			$query = "UPDATE $fields SET  $table where $condition";
		}
		else
		{
		$query = "UPDATE $fields SET  $table $join where $condition";
		}
		//echo $query;
		$flag = $this->Insert($query);
		if($flag )
		{
		 return 1;
		}
		else
		{
			return 0;
		}
	}
	
   /****************************************************************************
		Returns the AUTO_INCREMENT fiels ID generated by the most recent INSERT or UPDATE statement. If the table does not contains an AUTO_INCREMENT field it returns 0.
		* @param $insertQuery string.  An SQL INSERT statement
	****************************************************************************/

    function InsertId(){
		//echo $Query;
		
		return   mysqli_insert_id($this->conn);
			
			
		$Query = 'SELECT id FROM '.$tableName.' order by id desc';
 		$this->mySqlResult = mysqli_query($this->conn  , $Query);
	 	$res = mysqli_fetch_row($this->mySqlResult );
		return $res[0];
      	  //return (@mysqli_insert_id());
	}
	
   /*****************************************************************************
   	returns named columns from pass table
	****************************************************************************/




/* ===================================== Get Log Date =================================== */
function checkDbUser($email ,$password ,$type)
{

    $query = "select * from tbl_users where email_id ='".$email."' and password='".$password."' and  login_type ='".$type."' and  status=1" ;
	$count = $this->NumRows($query);
	if($count >0){
	$getUserName = $this->Select($query);
	$uname = mysqli_fetch_object($getUserName);
	$user =array();
	$user['id'] = $uname->id;
	$user['user_name'] = $uname->user_name;
	$user['email_id'] = $uname->email_id;
	$user['first_name'] = $uname->first_name;
	$user['last_name'] = $uname->last_name;
	$user['zip'] = $uname->zip;
	$user['notifications_status'] = $uname->notifications_status;
	$user['lang'] = $uname->lang;
	$user['lat'] = $uname->lat;
	$user['login_type'] = $uname->login_type;
	$message =$user;
	return $message;
	}else{$user =array();
		$user['id']  = '0';
			return $message = $user;
	}


}




/* ========================================   Login with fb =================================== */
function checkFbUser($user )
{

    $query = "select * from tbl_users where  email_id ='".$user."'  and  status=1" ;
	$count = $this->NumRows($query);
	if($count >0){
	$getUserName = $this->Select($query);
	$uname = mysqli_fetch_object($getUserName);
	$user =array();
	$user['id'] = $uname->id;
	$user['user_name'] = $uname->user_name;
	$user['email_id'] = $uname->email_id;
	$user['first_name'] = $uname->first_name;
	$user['last_name'] = $uname->last_name;
	$user['zip'] = $uname->zip;
	$user['notifications_status'] = $uname->notifications_status;
	$user['lang'] = $uname->lang;
	$user['lat'] = $uname->lat;
	$user['login_type'] = $uname->login_type;
	$message =$user;
	return $message;
	}else{$user =array();
		$user['id']  = '0';
			return $message = $user;
	}
	
}


		/****************************************************************************
		Selects rows from the database with the given SQL Statement
		* @param $query string.  An SQL statement
		* @returns mixed[]
	****************************************************************************/
   function tagname($tagid)
	{
		$query="select tag  from tags where id='".$tagid."'";
		return $this->SelectAll($query);

	}


	function authorname($authorid)
	{
		$query="select name  from author where id='".$authorid."'";
		$authorname =  $this->FetchRow($query);
		return $authorname[0];

	}



		/****************************************************************************
		Selects rows from the database with the given SQL Statement
		* @param $query string.  An SQL statement
		* @returns mixed[]
	****************************************************************************/
   function Select($query )
	{
		return mysqli_query($this->conn , $query);
	}


	    function AffectedRows()
    {
		//$this->mySqlResult = mysqli_query( $Query, $this->conn );
        return (@mysqli_affected_rows($this->conn));
	}



	/****************************************************************************
		Selects rows from the database with the given SQL Statement
		* @param $query string.  An SQL statement
		* @returns mixed[]
	**************************************************************************/
	 function SelectAll($query)
	{

		$recordSet = array();
		if ($result = mysqli_query($this->conn , $query)) {

			/* fetch object array */
			while ($obj = mysqli_fetch_object($result)) {
				$recordSet[] = $obj;
			}

			/* free result set */
			$result->close();
		}

		return $recordSet;
	}


	 function SelectAllarray($query)
	{
		$recordSet = array();
		if ($result = mysqli_query($this->conn , $query)) {

			/* fetch object array */
			while ($obj = mysqli_fetch_row($result)) {
				$recordSet = $obj;
			}

			/* free result set */
			$result->close();
		}
		//print_r($recordSet);
		return $recordSet;
	}

	/****************************************************************************
		Select tags from the database with the given SQL Statement
		* @param $query string.  An SQL statement
		* @returns mixed[]
	**************************************************************************/
	 function Selecttags($query)
	 {
		$json = array();
		if ($result = mysqli_query($this->conn , $query)) {

			/* fetch object array */
			while ($obj = mysqli_fetch_object($result)) {
				 $recordSet['id'] = $obj->id;
				$recordSet['tag']= $obj->tag;
				$json[] =$recordSet;
			}
		}
		return $json;
     }
    
	/****************************************************************************
		Returns the number of rows selected from the database by the given SQL statement.
		* @param $Query string.  An SQL statement

	****************************************************************************/

    function NumRows($Query)
    {
  // echo $Query;

		$this->mySqlResult = mysqli_query($this->conn , $Query);

		if ($this->mySqlResult)
		{
			return (@mysqli_num_rows($this->mySqlResult ));
		}
		else
		{
			return '0';
		}
	}
	/****************************************************************************
		Insert the record

	****************************************************************************/

	function Insert($insertQuery)
   { // echo $insertQuery;
		//die;
	
	 $flag = mysqli_query($this->conn , $insertQuery ) ;
     	return $flag;
   }

   	function Update($UpdateQuery)
	{ // echo $UpdateQuery;
		//die;
		
		$flag = mysqli_query($this->conn , $UpdateQuery ) ;
     	if($flag)
		{
			return '1';
		}
		else
		{
			return '0';
		}
   }
   
   

	/****************************************************************************
		Returns a single record data the database by the given SQL Select statement in the form of a numerical indexed array containing the field values.
		* @param $Query string.  An SQL statement

	****************************************************************************/

    function FetchRow($Query)
    {
		$this->mySqlResult = mysqli_query(  $this->conn ,$Query);
        return (@mysqli_fetch_row($this->mySqlResult ));
    }



	function getquizname($qid)
	{
		$query= "select title from exam_topic where id='".$qid."'";
		$select= mysqli_query($this->conn , $query);
		$rows = mysqli_fetch_assoc($select);
		foreach($rows as $key=>$value)
		{
			return $value;
		}

	}
	
	

	/****************************************************************************
	get distance

	****************************************************************************/

	function distance($lat1, $lon1, $lat2, $lon2, $unit) {

  $theta = $lon1 - $lon2;
  $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
  $dist = acos($dist);
  $dist = rad2deg($dist);
  $miles = $dist * 60 * 1.1515;
  $unit = strtoupper($unit);

  if ($unit == "K") {
    return ($miles * 1.609344);
  } else if ($unit == "N") {
      return ($miles * 0.8684);
    } else {
        return $miles;
      }
}
		/****************************************************************************
		Uplod Image

	****************************************************************************/

	function uploadImage($image, $directory)
	{

	if ($image['name'] != '')
	{
				//uploade image
				$file = basename($image['name']);
				$uploadFile = $file;
				$randomNumber = rand(0, 99999);
				$fileNewName= $randomNumber .time(). $uploadFile;
				$fileNewName = preg_replace('/[^a-zA-Z0-9.\']/', '_', $fileNewName);
				$fileNewName = str_replace("'", '', $fileNewName);
				$fileNewName = str_replace('"', '', $fileNewName);
				$fileNewName = str_replace(" ", '', $fileNewName);
				$newName = ''.$directory.'/'.$fileNewName;       

				//include('s3_config.php');
				$image =@move_uploaded_file($image['tmp_name'], $newName);

				if($image){
					return $fileNewName;

				}else{

						return '';
				}

		}
		else
		{
			return '';
        }
        
    }
    
    
    
    
    
    	/**************************************************************************************
        Copy Items

	****************************************************************************/

    
       
	public function copyItems($item_id, $user_id, $action =''){ 
        
        $query = "INSERT INTO `tbl_items` (user_id, category_id, item_description, key_word, litem_listing_type, source,status, created_on, updated_on, temp_flag, item_action)
SELECT  added_by_user_id, category_id, item_description,key_word, '1', 'unknown', status,  UTC_TIMESTAMP(),  UTC_TIMESTAMP(), tbl_items.id, '".$action."'  FROM `tbl_items` JOIN `tbl_item_added` as ad ON ad.item_id = tbl_items.id  WHERE item_id =".$item_id."";
		$count = $this->Insert($query);
        
        $item_photo =   $this->GetTableData1('tbl_items_photo', '* ', ' item_id='.$item_id.'', '');
        $items_new  =   $this->GetTableData1('tbl_items', 'id', ' temp_flag='.$item_id.'', '');
        
       
        $query ='';
        if(is_array($items_new ))
        foreach($items_new as $value){
            
            if(is_array($item_photo ))
            foreach($item_photo as $image_value){ 
                $new_image = time().$image_value->item_image;
                
                if (copy('itemimages/'.$image_value->item_image, 'itemimages/'.$new_image)) {

                //$new_image= time().'newimage'.pathinfo($image_value->item_image, PATHINFO_EXTENSION);
                 //echo copy("http://baltech1.s3.amazonaws.com/".$file, "http://baltech1.s3.amazonaws.com/".$newfile);
                 $query .= '("'.$value->id.'", "'.$new_image.'", "'.$image_value->caption.'"),';
			 }
			}
		}
		
        
        
        

    
    if($query !='')
        $count = $this->Insert('INSERT INTO `tbl_items_photo` (item_id, item_image, caption ) values '.trim($query, ','));
     //'INSERT INTO `tbl_items_photo` (item_id, item_id, caption ) values '.trim($query, ',');
        
  
        
        $result = $this->Update('UPDATE tbl_items SET temp_flag ="", updated_on = UTC_TIMESTAMP() where temp_flag = '.$item_id.' ');
       
 
         //$result1  = $this->deleteData(' tbl_item_added', ' item_id='.$item_id.' and user_id = '.$user_id.' ');
        
		return  $result;
	}
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	public function	chkEmail($email){
		$query = "SELECT * FROM users WHERE email= '".$email."'";
		$count = $this->NumRows($query);
		if($count > 0){
		   //echo $this->pw;
			$this->pw = $this->randString(6);
			$this->UpdateData('users', 'password ="'.md5($this->pw).'"' , 'email = "'. $email.'"','');
		}
		return $count;
	}


		public	function randString($length) {
				 $charset='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
				 $str = '';
				 $count = strlen($charset);
				 while ($length--) {
				  $str .= $charset[mt_rand(0, $count-1)];
				 }
				 return $str;
					}

}//end class
?>
